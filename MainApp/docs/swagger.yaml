definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  models.Community:
    properties:
      avatar_id:
        type: integer
      create_date:
        readOnly: true
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
    type: object
  models.Dialog:
    properties:
      dialog_id:
        readOnly: true
        type: integer
      messages:
        items:
          $ref: '#/definitions/models.Message'
        readOnly: true
        type: array
      userId1:
        type: integer
      userId2:
        type: integer
    type: object
  models.File:
    properties:
      id:
        type: integer
    type: object
  models.Image:
    properties:
      id:
        type: integer
    type: object
  models.Message:
    properties:
      body:
        type: string
      created_at:
        type: string
      dialog_id:
        type: integer
      files:
        items:
          type: integer
        type: array
      id:
        readOnly: true
        type: integer
      images:
        items:
          type: integer
        type: array
      receiver_id:
        type: integer
      sender_id:
        readOnly: true
        type: integer
      stickers:
        items:
          type: integer
        type: array
    type: object
  models.Post:
    properties:
      avatar_id:
        readOnly: true
        type: integer
      community_id:
        type: integer
      count_likes:
        type: integer
      create_date:
        readOnly: true
        type: string
      files:
        items:
          $ref: '#/definitions/models.File'
        type: array
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      is_liked:
        type: boolean
      message:
        type: string
      user_first_name:
        readOnly: true
        type: string
      user_id:
        type: integer
      user_last_name:
        readOnly: true
        type: string
    required:
    - message
    type: object
  models.ReqCommunityCreate:
    properties:
      avatar_id:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - avatar_id
    - description
    - name
    type: object
  models.User:
    properties:
      avatar:
        type: integer
      createdAt:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        readOnly: true
        type: integer
      last_name:
        type: string
      nick_name:
        type: string
      password:
        type: string
    required:
    - email
    - first_name
    - last_name
    - nick_name
    - password
    type: object
  models.UserSignIn:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  pkg.Response:
    properties:
      body: {}
    type: object
host: 89.208.197.127:8080
info:
  contact: {}
  title: WS Swagger API
  version: "1.0"
paths:
  /auth:
    get:
      description: check user auth
      produces:
      - application/json
      responses:
        "200":
          description: success auth
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Auth
      tags:
      - auth
  /chat:
    get:
      description: get all dialogs
      produces:
      - application/json
      responses:
        "200":
          description: success get dialogs
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.Dialog'
                  type: array
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: GetAllDialogs
      tags:
      - chat
  /chat/{id}:
    get:
      description: get dialog
      parameters:
      - description: Chat ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get dialog
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Dialog'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find chat with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: GetDialog
      tags:
      - chat
  /chat/send_message:
    post:
      consumes:
      - application/json
      description: send message
      parameters:
      - description: message data
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.Message'
      produces:
      - application/json
      responses:
        "200":
          description: success send message
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Message'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find item with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: SendMessage
      tags:
      - chat
  /chat/user/{id}:
    get:
      description: get dialog
      parameters:
      - description: Friend ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get dialog
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Dialog'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find chat with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: GetDialogByUsers
      tags:
      - chat
  /communities:
    get:
      description: Get all communities
      produces:
      - application/json
      responses:
        "200":
          description: success get community
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Community'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get all communities
      tags:
      - communities
  /communities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a community
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find community with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete a community
      tags:
      - communities
    get:
      description: Get a community info
      parameters:
      - description: community ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get community
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Community'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find community with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get a community
      tags:
      - communities
  /communities/{id}/posts:
    get:
      description: Get all community posts
      parameters:
      - description: Community ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get community posts
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.Post'
                  type: array
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Community not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get community posts
      tags:
      - posts
  /communities/create:
    post:
      consumes:
      - application/json
      description: Create a community
      parameters:
      - description: community info
        in: body
        name: community
        required: true
        schema:
          $ref: '#/definitions/models.ReqCommunityCreate'
      produces:
      - application/json
      responses:
        "200":
          description: success create community
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Community'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "422":
          description: unprocessable entity
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a community
      tags:
      - communities
  /communities/edit:
    post:
      consumes:
      - application/json
      description: Update a community
      parameters:
      - description: community info
        in: body
        name: community
        required: true
        schema:
          $ref: '#/definitions/models.Community'
      produces:
      - application/json
      responses:
        "200":
          description: success update community
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Community'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf or permission denied
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "422":
          description: unprocessable entity
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update a community
      tags:
      - communities
  /create_csrf:
    post:
      description: Get CSRF token
      responses:
        "204":
          description: success create csrf, body is empty
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: CreateCSRF
      tags:
      - auth
  /feed:
    get:
      description: Feed
      produces:
      - application/json
      responses:
        "200":
          description: success get feed
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.Post'
                  type: array
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Feed
      tags:
      - posts
  /file/{id}:
    get:
      description: Get file by id
      parameters:
      - description: file ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: success get file
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get file by id
      tags:
      - file
  /file/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: success upload file
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Upload file
      tags:
      - file
  /friends/{user_id}:
    get:
      description: get user's friends
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get profile
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: user doesn't exist
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: SelectFriends
      tags:
      - friends
  /friends/add/{friend_id}:
    post:
      description: add friend
      parameters:
      - description: Friend ID
        in: path
        name: friend_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: friend added
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: friend or user doesn't exist
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: friend already exists
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: AddFriend
      tags:
      - friends
  /friends/check/{friend_id}:
    get:
      description: check friend
      parameters:
      - description: Friend ID
        in: path
        name: friend_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get profile
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  type: boolean
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: item doesn't exist
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: CheckIsFriend
      tags:
      - friends
  /friends/delete/{friend_id}:
    delete:
      description: delete friend
      parameters:
      - description: Friend ID
        in: path
        name: friend_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: friend deleted, body is empty
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: friend/user/friendship doesn't exist
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: DeleteFriend
      tags:
      - friends
  /image/{id}:
    get:
      description: Get image by id
      parameters:
      - description: image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: success get image
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get image by id
      tags:
      - image
  /image/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload image
      parameters:
      - description: image file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: success upload image
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Upload image
      tags:
      - image
  /logout:
    post:
      description: user logout
      produces:
      - application/json
      responses:
        "204":
          description: success logout, body is empty
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Logout
      tags:
      - auth
  /post/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Get post by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get post
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Post'
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Show a post
      tags:
      - posts
  /post/create:
    post:
      consumes:
      - application/json
      description: Create a post
      parameters:
      - description: post info
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: success get post
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Post'
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a post
      tags:
      - posts
  /post/edit:
    post:
      consumes:
      - application/json
      description: Update a post
      parameters:
      - description: post info
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: success get post
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.Post'
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update a post
      tags:
      - posts
  /post/like/{id}:
    put:
      description: Like a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Like a post
      tags:
      - posts
  /post/unlike/{id}:
    put:
      description: Unlike a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Unlike a post
      tags:
      - posts
  /signin:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: success sign in
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: invalid password
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: user doesn't exist
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: SignIn
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: user sign up
      parameters:
      - description: user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: user created
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "409":
          description: email already exists
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: SignUp
      tags:
      - auth
  /users:
    get:
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: success get users
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: GetUsers
      tags:
      - users
  /users/{id}:
    get:
      description: get user's profile
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get profile
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find user with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: GetProfile
      tags:
      - users
  /users/{id}/posts:
    get:
      description: Get all users posts
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success get feed
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.Post'
                  type: array
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Post not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: invalid http method
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get users posts
      tags:
      - posts
  /users/search/{name}:
    get:
      description: search users by name
      parameters:
      - description: User name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success search users
          schema:
            allOf:
            - $ref: '#/definitions/pkg.Response'
            - properties:
                body:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: SearchUsers
      tags:
      - users
  /users/update:
    put:
      consumes:
      - application/json
      description: update user's profile
      parameters:
      - description: user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "204":
          description: success update
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: no cookie
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "403":
          description: invalid csrf
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: can't find user with such id
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: UpdateUser
      tags:
      - users
swagger: "2.0"
